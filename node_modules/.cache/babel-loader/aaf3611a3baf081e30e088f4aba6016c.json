{"ast":null,"code":"var _jsxFileName = \"/Users/tejaswinikumkum/Documents/SEProject/gator-news/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignInSingUp from \"./page/SignInSingUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [user, setUser] = useState({\n    name: \"Tejaswini\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SignInSingUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Heyy \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 4\n  }, this);\n} // import React, { useState, useEffect } from \"react\";\n// import SignInSingUp from \"./page/SignInSingUp\";\n// import { ToastContainer } from \"react-toastify\";\n// import { AuthContext } from \"./utils/contexts\";\n// import { isUserLogedApi } from \"./api/auth\";\n// import Routing from \"./routes/Routing\";\n// export default function App() {\n//   const [user, setUser] = useState(null);\n//   const [loadUser, setLoadUser] = useState(false);\n//   const [refreshCheckLogin, setRefreshCheckLogin] = useState(false);\n//   useEffect(() => {\n//     setUser(isUserLogedApi());\n//     setRefreshCheckLogin(false);\n//     setLoadUser(true);\n//   }, [refreshCheckLogin]);\n//   if (!loadUser) return null;\n//   return (\n//     <AuthContext.Provider value={user}>\n//       {user ? (\n//         <Routing setRefreshCheckLogin={setRefreshCheckLogin} />\n//       ) : (\n//         <SignInSingUp setRefreshCheckLogin={setRefreshCheckLogin} />\n//       )}\n//       <ToastContainer\n//         position=\"top-right\"\n//         autoClose={5000}\n//         hideProgressBar\n//         newestOnTop={false}\n//         closeOnClick\n//         rtl={false}\n//         pauseOnVisibilityChange\n//         draggable\n//         pauseOnHover\n//       />\n//     </AuthContext.Provider>\n//   );\n// }\n\n_s(App, \"jBu7KVORx25NVYLn9unTIPEpyoU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tejaswinikumkum/Documents/SEProject/gator-news/src/App.js"],"names":["React","useState","SignInSingUp","App","user","setUser","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAhC;AAIA,sBACC;AAAA,cACGF,IAAI,gBACH;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADG,gBAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADD;AAWD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA3DwBD,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport SignInSingUp from \"./page/SignInSingUp\";\n\n\nexport default function App() {\n  const [user, setUser] = useState({name: \"Tejaswini\"});\n\n\n\n  return (\n   <div>\n     {user ? (\n       <div>\n         <SignInSingUp/>\n       </div>\n     ):(\n       <h1> Heyy </h1>\n     )}\n   </div>\n  );\n}\n\n\n// import React, { useState, useEffect } from \"react\";\n// import SignInSingUp from \"./page/SignInSingUp\";\n// import { ToastContainer } from \"react-toastify\";\n// import { AuthContext } from \"./utils/contexts\";\n// import { isUserLogedApi } from \"./api/auth\";\n// import Routing from \"./routes/Routing\";\n\n// export default function App() {\n//   const [user, setUser] = useState(null);\n//   const [loadUser, setLoadUser] = useState(false);\n//   const [refreshCheckLogin, setRefreshCheckLogin] = useState(false);\n\n//   useEffect(() => {\n//     setUser(isUserLogedApi());\n//     setRefreshCheckLogin(false);\n//     setLoadUser(true);\n//   }, [refreshCheckLogin]);\n\n//   if (!loadUser) return null;\n\n//   return (\n//     <AuthContext.Provider value={user}>\n//       {user ? (\n//         <Routing setRefreshCheckLogin={setRefreshCheckLogin} />\n//       ) : (\n//         <SignInSingUp setRefreshCheckLogin={setRefreshCheckLogin} />\n//       )}\n//       <ToastContainer\n//         position=\"top-right\"\n//         autoClose={5000}\n//         hideProgressBar\n//         newestOnTop={false}\n//         closeOnClick\n//         rtl={false}\n//         pauseOnVisibilityChange\n//         draggable\n//         pauseOnHover\n//       />\n//     </AuthContext.Provider>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}